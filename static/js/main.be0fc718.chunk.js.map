{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box-component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monsters","id","name","email","CardList","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","res","json","users","this","filteredMonster","filter","monster","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAIaA,G,MAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,SAASC,GAAzC,4BACtB,6BAAKL,EAAMI,SAASE,OACpB,4BAAIN,EAAMI,SAASG,aCFdC,G,MAAW,SAACR,GACzB,OACA,qBAAKC,UAAU,YAAf,SACKD,EAAMI,SAASK,KAAK,SAAAL,GAAQ,OACvB,cAAC,EAAD,CAAwBA,SAAUA,GAAvBA,EAASC,WCNjBK,G,YAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAcC,EAAhB,EAAgBA,aAAhB,OACrB,uBAEIX,UAAW,SACXY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCoCHG,E,kDAvCb,aAAe,IAAD,8BACZ,gBAcFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAdpC,EAAKC,MAAQ,CACXjB,SAAW,GACXc,YAAc,IAJJ,E,gEASM,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAG,EAAKT,SAAS,CAACb,SAASsB,S,+BAO9B,IAAD,EACyBC,KAAKN,MAA9BjB,EADA,EACAA,SAAUc,EADV,EACUA,YACXU,EAAkBxB,EAASyB,QAAQ,SAAAC,GAAO,OAC9CA,EAAQxB,KAAKyB,cAAcC,SAASd,EAAYa,kBAGlD,OACA,sBAAK9B,UAAU,MAAf,UAEI,iDACA,cAAC,EAAD,CACEU,YAAc,iBACdC,aAAgBe,KAAKf,eAEvB,cAAC,EAAD,CAAUR,SAAUwB,W,GAlCVK,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.be0fc718.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = props => (\r\n    <div className='card-container'>\r\n        <img alt='monster' src={`https://robohash.org/${props.monsters.id}?set=set2&size=180x180`}/>\r\n        <h2>{props.monsters.name}</h2>\r\n        <p>{props.monsters.email}</p>\r\n    </div>\r\n);","import React from 'react';\r\n\r\nimport {Card} from '../card/card.component';\r\n\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = (props) => {\r\nreturn(\r\n<div className='card-list'>\r\n    {props.monsters.map( monsters => (\r\n          <Card key={monsters.id} monsters={monsters} />\r\n    ))}\r\n</div>\r\n)\r\n}","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder , handleChange}) => (\r\n    <input \r\n        \r\n        className =\"search\"\r\n        type=\"search\"\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n    />\r\n);","import React, { Component } from 'react';\nimport {CardList} from './components/card-list/card-list.component'\nimport './App.css';\nimport { SearchBox } from './components/search-box/search-box-component';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters : [],\n      searchField : ''\n    };\n    \n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(res => res.json())\n    .then(users=> this.setState({monsters:users}))\n  }\n\n  handleChange = e => {\n    this.setState({searchField:e.target.value})\n  }\n\n  render() {\n    const {monsters, searchField} = this.state;\n    const filteredMonster = monsters.filter( monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n\n    return(\n    <div className=\"App\">\n\n        <h1>MONSTER ROLODEX</h1>\n        <SearchBox\n          placeholder = \"search monster\"\n          handleChange = {this.handleChange}\n        />\n        <CardList monsters={filteredMonster} />\n    </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}